'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace gov.weather.www
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ndfdXMLBinding", [Namespace]:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
    Partial Public Class ndfdXML
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private NDFDgenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NDFDgenByDayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NDFDgenLatLonListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NDFDgenByDayLatLonListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GmlLatLonListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GmlTimeSeriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LatLonListSubgridOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LatLonListLineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LatLonListZipCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LatLonListSquareOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CornerPointsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LatLonListCityNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "https://graphical.weather.gov/xml/SOAP_server/ndfdXMLserver.php"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event NDFDgenCompleted As NDFDgenCompletedEventHandler
        
        '''<remarks/>
        Public Event NDFDgenByDayCompleted As NDFDgenByDayCompletedEventHandler
        
        '''<remarks/>
        Public Event NDFDgenLatLonListCompleted As NDFDgenLatLonListCompletedEventHandler
        
        '''<remarks/>
        Public Event NDFDgenByDayLatLonListCompleted As NDFDgenByDayLatLonListCompletedEventHandler
        
        '''<remarks/>
        Public Event GmlLatLonListCompleted As GmlLatLonListCompletedEventHandler
        
        '''<remarks/>
        Public Event GmlTimeSeriesCompleted As GmlTimeSeriesCompletedEventHandler
        
        '''<remarks/>
        Public Event LatLonListSubgridCompleted As LatLonListSubgridCompletedEventHandler
        
        '''<remarks/>
        Public Event LatLonListLineCompleted As LatLonListLineCompletedEventHandler
        
        '''<remarks/>
        Public Event LatLonListZipCodeCompleted As LatLonListZipCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event LatLonListSquareCompleted As LatLonListSquareCompletedEventHandler
        
        '''<remarks/>
        Public Event CornerPointsCompleted As CornerPointsCompletedEventHandler
        
        '''<remarks/>
        Public Event LatLonListCityNamesCompleted As LatLonListCityNamesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgen", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function NDFDgen(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType) As <System.Xml.Serialization.SoapElementAttribute("dwmlOut")> String
            Dim results() As Object = Me.Invoke("NDFDgen", New Object() {latitude, longitude, product, startTime, endTime, Unit, weatherParameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginNDFDgen(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NDFDgen", New Object() {latitude, longitude, product, startTime, endTime, Unit, weatherParameters}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNDFDgen(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NDFDgenAsync(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType)
            Me.NDFDgenAsync(latitude, longitude, product, startTime, endTime, Unit, weatherParameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NDFDgenAsync(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType, ByVal userState As Object)
            If (Me.NDFDgenOperationCompleted Is Nothing) Then
                Me.NDFDgenOperationCompleted = AddressOf Me.OnNDFDgenOperationCompleted
            End If
            Me.InvokeAsync("NDFDgen", New Object() {latitude, longitude, product, startTime, endTime, Unit, weatherParameters}, Me.NDFDgenOperationCompleted, userState)
        End Sub
        
        Private Sub OnNDFDgenOperationCompleted(ByVal arg As Object)
            If (Not (Me.NDFDgenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NDFDgenCompleted(Me, New NDFDgenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDay", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function NDFDgenByDay(ByVal latitude As Decimal, ByVal longitude As Decimal, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal startDate As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType) As <System.Xml.Serialization.SoapElementAttribute("dwmlByDayOut")> String
            Dim results() As Object = Me.Invoke("NDFDgenByDay", New Object() {latitude, longitude, startDate, numDays, Unit, format})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginNDFDgenByDay(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NDFDgenByDay", New Object() {latitude, longitude, startDate, numDays, Unit, format}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNDFDgenByDay(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NDFDgenByDayAsync(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType)
            Me.NDFDgenByDayAsync(latitude, longitude, startDate, numDays, Unit, format, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NDFDgenByDayAsync(ByVal latitude As Decimal, ByVal longitude As Decimal, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType, ByVal userState As Object)
            If (Me.NDFDgenByDayOperationCompleted Is Nothing) Then
                Me.NDFDgenByDayOperationCompleted = AddressOf Me.OnNDFDgenByDayOperationCompleted
            End If
            Me.InvokeAsync("NDFDgenByDay", New Object() {latitude, longitude, startDate, numDays, Unit, format}, Me.NDFDgenByDayOperationCompleted, userState)
        End Sub
        
        Private Sub OnNDFDgenByDayOperationCompleted(ByVal arg As Object)
            If (Not (Me.NDFDgenByDayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NDFDgenByDayCompleted(Me, New NDFDgenByDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenLatLonList", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function NDFDgenLatLonList(ByVal listLatLon As String, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType) As <System.Xml.Serialization.SoapElementAttribute("dwmlOut")> String
            Dim results() As Object = Me.Invoke("NDFDgenLatLonList", New Object() {listLatLon, product, startTime, endTime, Unit, weatherParameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginNDFDgenLatLonList(ByVal listLatLon As String, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NDFDgenLatLonList", New Object() {listLatLon, product, startTime, endTime, Unit, weatherParameters}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNDFDgenLatLonList(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NDFDgenLatLonListAsync(ByVal listLatLon As String, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType)
            Me.NDFDgenLatLonListAsync(listLatLon, product, startTime, endTime, Unit, weatherParameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NDFDgenLatLonListAsync(ByVal listLatLon As String, ByVal product As productType, ByVal startTime As Date, ByVal endTime As Date, ByVal Unit As unitType, ByVal weatherParameters As weatherParametersType, ByVal userState As Object)
            If (Me.NDFDgenLatLonListOperationCompleted Is Nothing) Then
                Me.NDFDgenLatLonListOperationCompleted = AddressOf Me.OnNDFDgenLatLonListOperationCompleted
            End If
            Me.InvokeAsync("NDFDgenLatLonList", New Object() {listLatLon, product, startTime, endTime, Unit, weatherParameters}, Me.NDFDgenLatLonListOperationCompleted, userState)
        End Sub
        
        Private Sub OnNDFDgenLatLonListOperationCompleted(ByVal arg As Object)
            If (Not (Me.NDFDgenLatLonListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NDFDgenLatLonListCompleted(Me, New NDFDgenLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDayLatLonLis"& _ 
            "t", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function NDFDgenByDayLatLonList(ByVal listLatLon As String, <System.Xml.Serialization.SoapElementAttribute(DataType:="date")> ByVal startDate As Date, <System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType) As <System.Xml.Serialization.SoapElementAttribute("dwmlByDayOut")> String
            Dim results() As Object = Me.Invoke("NDFDgenByDayLatLonList", New Object() {listLatLon, startDate, numDays, Unit, format})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginNDFDgenByDayLatLonList(ByVal listLatLon As String, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NDFDgenByDayLatLonList", New Object() {listLatLon, startDate, numDays, Unit, format}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNDFDgenByDayLatLonList(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NDFDgenByDayLatLonListAsync(ByVal listLatLon As String, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType)
            Me.NDFDgenByDayLatLonListAsync(listLatLon, startDate, numDays, Unit, format, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NDFDgenByDayLatLonListAsync(ByVal listLatLon As String, ByVal startDate As Date, ByVal numDays As String, ByVal Unit As unitType, ByVal format As formatType, ByVal userState As Object)
            If (Me.NDFDgenByDayLatLonListOperationCompleted Is Nothing) Then
                Me.NDFDgenByDayLatLonListOperationCompleted = AddressOf Me.OnNDFDgenByDayLatLonListOperationCompleted
            End If
            Me.InvokeAsync("NDFDgenByDayLatLonList", New Object() {listLatLon, startDate, numDays, Unit, format}, Me.NDFDgenByDayLatLonListOperationCompleted, userState)
        End Sub
        
        Private Sub OnNDFDgenByDayLatLonListOperationCompleted(ByVal arg As Object)
            If (Not (Me.NDFDgenByDayLatLonListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NDFDgenByDayLatLonListCompleted(Me, New NDFDgenByDayLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlLatLonList", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function GmlLatLonList(ByVal listLatLon As String, ByVal requestedTime As Date, ByVal featureType As featureTypeType, ByVal weatherParameters As weatherParametersType) As <System.Xml.Serialization.SoapElementAttribute("dwGmlOut")> String
            Dim results() As Object = Me.Invoke("GmlLatLonList", New Object() {listLatLon, requestedTime, featureType, weatherParameters})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGmlLatLonList(ByVal listLatLon As String, ByVal requestedTime As Date, ByVal featureType As featureTypeType, ByVal weatherParameters As weatherParametersType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GmlLatLonList", New Object() {listLatLon, requestedTime, featureType, weatherParameters}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGmlLatLonList(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GmlLatLonListAsync(ByVal listLatLon As String, ByVal requestedTime As Date, ByVal featureType As featureTypeType, ByVal weatherParameters As weatherParametersType)
            Me.GmlLatLonListAsync(listLatLon, requestedTime, featureType, weatherParameters, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GmlLatLonListAsync(ByVal listLatLon As String, ByVal requestedTime As Date, ByVal featureType As featureTypeType, ByVal weatherParameters As weatherParametersType, ByVal userState As Object)
            If (Me.GmlLatLonListOperationCompleted Is Nothing) Then
                Me.GmlLatLonListOperationCompleted = AddressOf Me.OnGmlLatLonListOperationCompleted
            End If
            Me.InvokeAsync("GmlLatLonList", New Object() {listLatLon, requestedTime, featureType, weatherParameters}, Me.GmlLatLonListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGmlLatLonListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GmlLatLonListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GmlLatLonListCompleted(Me, New GmlLatLonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlTimeSeries", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function GmlTimeSeries(ByVal listLatLon As String, ByVal startTime As Date, ByVal endTime As Date, ByVal compType As compTypeType, ByVal featureType As featureTypeType, ByVal propertyName As String) As <System.Xml.Serialization.SoapElementAttribute("dwGmlOut")> String
            Dim results() As Object = Me.Invoke("GmlTimeSeries", New Object() {listLatLon, startTime, endTime, compType, featureType, propertyName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGmlTimeSeries(ByVal listLatLon As String, ByVal startTime As Date, ByVal endTime As Date, ByVal compType As compTypeType, ByVal featureType As featureTypeType, ByVal propertyName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GmlTimeSeries", New Object() {listLatLon, startTime, endTime, compType, featureType, propertyName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGmlTimeSeries(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GmlTimeSeriesAsync(ByVal listLatLon As String, ByVal startTime As Date, ByVal endTime As Date, ByVal compType As compTypeType, ByVal featureType As featureTypeType, ByVal propertyName As String)
            Me.GmlTimeSeriesAsync(listLatLon, startTime, endTime, compType, featureType, propertyName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GmlTimeSeriesAsync(ByVal listLatLon As String, ByVal startTime As Date, ByVal endTime As Date, ByVal compType As compTypeType, ByVal featureType As featureTypeType, ByVal propertyName As String, ByVal userState As Object)
            If (Me.GmlTimeSeriesOperationCompleted Is Nothing) Then
                Me.GmlTimeSeriesOperationCompleted = AddressOf Me.OnGmlTimeSeriesOperationCompleted
            End If
            Me.InvokeAsync("GmlTimeSeries", New Object() {listLatLon, startTime, endTime, compType, featureType, propertyName}, Me.GmlTimeSeriesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGmlTimeSeriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GmlTimeSeriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GmlTimeSeriesCompleted(Me, New GmlTimeSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSubgrid", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function LatLonListSubgrid(ByVal lowerLeftLatitude As Decimal, ByVal lowerLeftLongitude As Decimal, ByVal upperRightLatitude As Decimal, ByVal upperRightLongitude As Decimal, ByVal resolution As Decimal) As <System.Xml.Serialization.SoapElementAttribute("listLatLonOut")> String
            Dim results() As Object = Me.Invoke("LatLonListSubgrid", New Object() {lowerLeftLatitude, lowerLeftLongitude, upperRightLatitude, upperRightLongitude, resolution})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLatLonListSubgrid(ByVal lowerLeftLatitude As Decimal, ByVal lowerLeftLongitude As Decimal, ByVal upperRightLatitude As Decimal, ByVal upperRightLongitude As Decimal, ByVal resolution As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LatLonListSubgrid", New Object() {lowerLeftLatitude, lowerLeftLongitude, upperRightLatitude, upperRightLongitude, resolution}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLatLonListSubgrid(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LatLonListSubgridAsync(ByVal lowerLeftLatitude As Decimal, ByVal lowerLeftLongitude As Decimal, ByVal upperRightLatitude As Decimal, ByVal upperRightLongitude As Decimal, ByVal resolution As Decimal)
            Me.LatLonListSubgridAsync(lowerLeftLatitude, lowerLeftLongitude, upperRightLatitude, upperRightLongitude, resolution, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LatLonListSubgridAsync(ByVal lowerLeftLatitude As Decimal, ByVal lowerLeftLongitude As Decimal, ByVal upperRightLatitude As Decimal, ByVal upperRightLongitude As Decimal, ByVal resolution As Decimal, ByVal userState As Object)
            If (Me.LatLonListSubgridOperationCompleted Is Nothing) Then
                Me.LatLonListSubgridOperationCompleted = AddressOf Me.OnLatLonListSubgridOperationCompleted
            End If
            Me.InvokeAsync("LatLonListSubgrid", New Object() {lowerLeftLatitude, lowerLeftLongitude, upperRightLatitude, upperRightLongitude, resolution}, Me.LatLonListSubgridOperationCompleted, userState)
        End Sub
        
        Private Sub OnLatLonListSubgridOperationCompleted(ByVal arg As Object)
            If (Not (Me.LatLonListSubgridCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LatLonListSubgridCompleted(Me, New LatLonListSubgridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListLine", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function LatLonListLine(ByVal endPoint1Lat As Decimal, ByVal endPoint1Lon As Decimal, ByVal endPoint2Lat As Decimal, ByVal endPoint2Lon As Decimal) As <System.Xml.Serialization.SoapElementAttribute("listLatLonOut")> String
            Dim results() As Object = Me.Invoke("LatLonListLine", New Object() {endPoint1Lat, endPoint1Lon, endPoint2Lat, endPoint2Lon})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLatLonListLine(ByVal endPoint1Lat As Decimal, ByVal endPoint1Lon As Decimal, ByVal endPoint2Lat As Decimal, ByVal endPoint2Lon As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LatLonListLine", New Object() {endPoint1Lat, endPoint1Lon, endPoint2Lat, endPoint2Lon}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLatLonListLine(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LatLonListLineAsync(ByVal endPoint1Lat As Decimal, ByVal endPoint1Lon As Decimal, ByVal endPoint2Lat As Decimal, ByVal endPoint2Lon As Decimal)
            Me.LatLonListLineAsync(endPoint1Lat, endPoint1Lon, endPoint2Lat, endPoint2Lon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LatLonListLineAsync(ByVal endPoint1Lat As Decimal, ByVal endPoint1Lon As Decimal, ByVal endPoint2Lat As Decimal, ByVal endPoint2Lon As Decimal, ByVal userState As Object)
            If (Me.LatLonListLineOperationCompleted Is Nothing) Then
                Me.LatLonListLineOperationCompleted = AddressOf Me.OnLatLonListLineOperationCompleted
            End If
            Me.InvokeAsync("LatLonListLine", New Object() {endPoint1Lat, endPoint1Lon, endPoint2Lat, endPoint2Lon}, Me.LatLonListLineOperationCompleted, userState)
        End Sub
        
        Private Sub OnLatLonListLineOperationCompleted(ByVal arg As Object)
            If (Not (Me.LatLonListLineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LatLonListLineCompleted(Me, New LatLonListLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListZipCode", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function LatLonListZipCode(ByVal zipCodeList As String) As <System.Xml.Serialization.SoapElementAttribute("listLatLonOut")> String
            Dim results() As Object = Me.Invoke("LatLonListZipCode", New Object() {zipCodeList})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLatLonListZipCode(ByVal zipCodeList As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LatLonListZipCode", New Object() {zipCodeList}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLatLonListZipCode(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LatLonListZipCodeAsync(ByVal zipCodeList As String)
            Me.LatLonListZipCodeAsync(zipCodeList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LatLonListZipCodeAsync(ByVal zipCodeList As String, ByVal userState As Object)
            If (Me.LatLonListZipCodeOperationCompleted Is Nothing) Then
                Me.LatLonListZipCodeOperationCompleted = AddressOf Me.OnLatLonListZipCodeOperationCompleted
            End If
            Me.InvokeAsync("LatLonListZipCode", New Object() {zipCodeList}, Me.LatLonListZipCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnLatLonListZipCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.LatLonListZipCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LatLonListZipCodeCompleted(Me, New LatLonListZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSquare", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function LatLonListSquare(ByVal centerPointLat As Decimal, ByVal centerPointLon As Decimal, ByVal distanceLat As Decimal, ByVal distanceLon As Decimal, ByVal resolution As Decimal) As <System.Xml.Serialization.SoapElementAttribute("listLatLonOut")> String
            Dim results() As Object = Me.Invoke("LatLonListSquare", New Object() {centerPointLat, centerPointLon, distanceLat, distanceLon, resolution})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLatLonListSquare(ByVal centerPointLat As Decimal, ByVal centerPointLon As Decimal, ByVal distanceLat As Decimal, ByVal distanceLon As Decimal, ByVal resolution As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LatLonListSquare", New Object() {centerPointLat, centerPointLon, distanceLat, distanceLon, resolution}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLatLonListSquare(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LatLonListSquareAsync(ByVal centerPointLat As Decimal, ByVal centerPointLon As Decimal, ByVal distanceLat As Decimal, ByVal distanceLon As Decimal, ByVal resolution As Decimal)
            Me.LatLonListSquareAsync(centerPointLat, centerPointLon, distanceLat, distanceLon, resolution, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LatLonListSquareAsync(ByVal centerPointLat As Decimal, ByVal centerPointLon As Decimal, ByVal distanceLat As Decimal, ByVal distanceLon As Decimal, ByVal resolution As Decimal, ByVal userState As Object)
            If (Me.LatLonListSquareOperationCompleted Is Nothing) Then
                Me.LatLonListSquareOperationCompleted = AddressOf Me.OnLatLonListSquareOperationCompleted
            End If
            Me.InvokeAsync("LatLonListSquare", New Object() {centerPointLat, centerPointLon, distanceLat, distanceLon, resolution}, Me.LatLonListSquareOperationCompleted, userState)
        End Sub
        
        Private Sub OnLatLonListSquareOperationCompleted(ByVal arg As Object)
            If (Not (Me.LatLonListSquareCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LatLonListSquareCompleted(Me, New LatLonListSquareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#CornerPoints", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function CornerPoints(ByVal sector As sectorType) As <System.Xml.Serialization.SoapElementAttribute("listLatLonOut")> String
            Dim results() As Object = Me.Invoke("CornerPoints", New Object() {sector})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCornerPoints(ByVal sector As sectorType, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CornerPoints", New Object() {sector}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCornerPoints(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CornerPointsAsync(ByVal sector As sectorType)
            Me.CornerPointsAsync(sector, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CornerPointsAsync(ByVal sector As sectorType, ByVal userState As Object)
            If (Me.CornerPointsOperationCompleted Is Nothing) Then
                Me.CornerPointsOperationCompleted = AddressOf Me.OnCornerPointsOperationCompleted
            End If
            Me.InvokeAsync("CornerPoints", New Object() {sector}, Me.CornerPointsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCornerPointsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CornerPointsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CornerPointsCompleted(Me, New CornerPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListCityNames", RequestNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl", ResponseNamespace:="https://graphical.weather.gov/xml/DWMLgen/wsdl/ndfdXML.wsdl")>  _
        Public Function LatLonListCityNames(<System.Xml.Serialization.SoapElementAttribute(DataType:="integer")> ByVal displayLevel As String) As <System.Xml.Serialization.SoapElementAttribute("listCityNamesOut")> String
            Dim results() As Object = Me.Invoke("LatLonListCityNames", New Object() {displayLevel})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLatLonListCityNames(ByVal displayLevel As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LatLonListCityNames", New Object() {displayLevel}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLatLonListCityNames(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LatLonListCityNamesAsync(ByVal displayLevel As String)
            Me.LatLonListCityNamesAsync(displayLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LatLonListCityNamesAsync(ByVal displayLevel As String, ByVal userState As Object)
            If (Me.LatLonListCityNamesOperationCompleted Is Nothing) Then
                Me.LatLonListCityNamesOperationCompleted = AddressOf Me.OnLatLonListCityNamesOperationCompleted
            End If
            Me.InvokeAsync("LatLonListCityNames", New Object() {displayLevel}, Me.LatLonListCityNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnLatLonListCityNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.LatLonListCityNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LatLonListCityNamesCompleted(Me, New LatLonListCityNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum productType
        
        '''<remarks/>
        <System.Xml.Serialization.SoapEnumAttribute("time-series")>  _
        timeseries
        
        '''<remarks/>
        glance
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum unitType
        
        '''<remarks/>
        e
        
        '''<remarks/>
        m
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Partial Public Class weatherParametersType
        
        Private maxtField As Boolean
        
        Private mintField As Boolean
        
        Private tempField As Boolean
        
        Private dewField As Boolean
        
        Private pop12Field As Boolean
        
        Private qpfField As Boolean
        
        Private skyField As Boolean
        
        Private snowField As Boolean
        
        Private wspdField As Boolean
        
        Private wdirField As Boolean
        
        Private wxField As Boolean
        
        Private wavehField As Boolean
        
        Private iconsField As Boolean
        
        Private rhField As Boolean
        
        Private apptField As Boolean
        
        Private incw34Field As Boolean
        
        Private incw50Field As Boolean
        
        Private incw64Field As Boolean
        
        Private cumw34Field As Boolean
        
        Private cumw50Field As Boolean
        
        Private cumw64Field As Boolean
        
        Private critfireoField As Boolean
        
        Private dryfireoField As Boolean
        
        Private conhazoField As Boolean
        
        Private ptornadoField As Boolean
        
        Private phailField As Boolean
        
        Private ptstmwindsField As Boolean
        
        Private pxtornadoField As Boolean
        
        Private pxhailField As Boolean
        
        Private pxtstmwindsField As Boolean
        
        Private ptotsvrtstmField As Boolean
        
        Private pxtotsvrtstmField As Boolean
        
        Private tmpabv14dField As Boolean
        
        Private tmpblw14dField As Boolean
        
        Private tmpabv30dField As Boolean
        
        Private tmpblw30dField As Boolean
        
        Private tmpabv90dField As Boolean
        
        Private tmpblw90dField As Boolean
        
        Private prcpabv14dField As Boolean
        
        Private prcpblw14dField As Boolean
        
        Private prcpabv30dField As Boolean
        
        Private prcpblw30dField As Boolean
        
        Private prcpabv90dField As Boolean
        
        Private prcpblw90dField As Boolean
        
        Private precipa_rField As Boolean
        
        Private sky_rField As Boolean
        
        Private td_rField As Boolean
        
        Private temp_rField As Boolean
        
        Private wdir_rField As Boolean
        
        Private wspd_rField As Boolean
        
        Private wwaField As Boolean
        
        Private tstmprbField As Boolean
        
        Private tstmcatField As Boolean
        
        Private wgustField As Boolean
        
        Private iceaccumField As Boolean
        
        Private maxrhField As Boolean
        
        Private minrhField As Boolean
        
        '''<remarks/>
        Public Property maxt() As Boolean
            Get
                Return Me.maxtField
            End Get
            Set
                Me.maxtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mint() As Boolean
            Get
                Return Me.mintField
            End Get
            Set
                Me.mintField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property temp() As Boolean
            Get
                Return Me.tempField
            End Get
            Set
                Me.tempField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dew() As Boolean
            Get
                Return Me.dewField
            End Get
            Set
                Me.dewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pop12() As Boolean
            Get
                Return Me.pop12Field
            End Get
            Set
                Me.pop12Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property qpf() As Boolean
            Get
                Return Me.qpfField
            End Get
            Set
                Me.qpfField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sky() As Boolean
            Get
                Return Me.skyField
            End Get
            Set
                Me.skyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property snow() As Boolean
            Get
                Return Me.snowField
            End Get
            Set
                Me.snowField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wspd() As Boolean
            Get
                Return Me.wspdField
            End Get
            Set
                Me.wspdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wdir() As Boolean
            Get
                Return Me.wdirField
            End Get
            Set
                Me.wdirField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wx() As Boolean
            Get
                Return Me.wxField
            End Get
            Set
                Me.wxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property waveh() As Boolean
            Get
                Return Me.wavehField
            End Get
            Set
                Me.wavehField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property icons() As Boolean
            Get
                Return Me.iconsField
            End Get
            Set
                Me.iconsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rh() As Boolean
            Get
                Return Me.rhField
            End Get
            Set
                Me.rhField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property appt() As Boolean
            Get
                Return Me.apptField
            End Get
            Set
                Me.apptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property incw34() As Boolean
            Get
                Return Me.incw34Field
            End Get
            Set
                Me.incw34Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property incw50() As Boolean
            Get
                Return Me.incw50Field
            End Get
            Set
                Me.incw50Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property incw64() As Boolean
            Get
                Return Me.incw64Field
            End Get
            Set
                Me.incw64Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cumw34() As Boolean
            Get
                Return Me.cumw34Field
            End Get
            Set
                Me.cumw34Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cumw50() As Boolean
            Get
                Return Me.cumw50Field
            End Get
            Set
                Me.cumw50Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cumw64() As Boolean
            Get
                Return Me.cumw64Field
            End Get
            Set
                Me.cumw64Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property critfireo() As Boolean
            Get
                Return Me.critfireoField
            End Get
            Set
                Me.critfireoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dryfireo() As Boolean
            Get
                Return Me.dryfireoField
            End Get
            Set
                Me.dryfireoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property conhazo() As Boolean
            Get
                Return Me.conhazoField
            End Get
            Set
                Me.conhazoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ptornado() As Boolean
            Get
                Return Me.ptornadoField
            End Get
            Set
                Me.ptornadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phail() As Boolean
            Get
                Return Me.phailField
            End Get
            Set
                Me.phailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ptstmwinds() As Boolean
            Get
                Return Me.ptstmwindsField
            End Get
            Set
                Me.ptstmwindsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pxtornado() As Boolean
            Get
                Return Me.pxtornadoField
            End Get
            Set
                Me.pxtornadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pxhail() As Boolean
            Get
                Return Me.pxhailField
            End Get
            Set
                Me.pxhailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pxtstmwinds() As Boolean
            Get
                Return Me.pxtstmwindsField
            End Get
            Set
                Me.pxtstmwindsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ptotsvrtstm() As Boolean
            Get
                Return Me.ptotsvrtstmField
            End Get
            Set
                Me.ptotsvrtstmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property pxtotsvrtstm() As Boolean
            Get
                Return Me.pxtotsvrtstmField
            End Get
            Set
                Me.pxtotsvrtstmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpabv14d() As Boolean
            Get
                Return Me.tmpabv14dField
            End Get
            Set
                Me.tmpabv14dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpblw14d() As Boolean
            Get
                Return Me.tmpblw14dField
            End Get
            Set
                Me.tmpblw14dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpabv30d() As Boolean
            Get
                Return Me.tmpabv30dField
            End Get
            Set
                Me.tmpabv30dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpblw30d() As Boolean
            Get
                Return Me.tmpblw30dField
            End Get
            Set
                Me.tmpblw30dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpabv90d() As Boolean
            Get
                Return Me.tmpabv90dField
            End Get
            Set
                Me.tmpabv90dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tmpblw90d() As Boolean
            Get
                Return Me.tmpblw90dField
            End Get
            Set
                Me.tmpblw90dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpabv14d() As Boolean
            Get
                Return Me.prcpabv14dField
            End Get
            Set
                Me.prcpabv14dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpblw14d() As Boolean
            Get
                Return Me.prcpblw14dField
            End Get
            Set
                Me.prcpblw14dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpabv30d() As Boolean
            Get
                Return Me.prcpabv30dField
            End Get
            Set
                Me.prcpabv30dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpblw30d() As Boolean
            Get
                Return Me.prcpblw30dField
            End Get
            Set
                Me.prcpblw30dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpabv90d() As Boolean
            Get
                Return Me.prcpabv90dField
            End Get
            Set
                Me.prcpabv90dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prcpblw90d() As Boolean
            Get
                Return Me.prcpblw90dField
            End Get
            Set
                Me.prcpblw90dField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property precipa_r() As Boolean
            Get
                Return Me.precipa_rField
            End Get
            Set
                Me.precipa_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sky_r() As Boolean
            Get
                Return Me.sky_rField
            End Get
            Set
                Me.sky_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property td_r() As Boolean
            Get
                Return Me.td_rField
            End Get
            Set
                Me.td_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property temp_r() As Boolean
            Get
                Return Me.temp_rField
            End Get
            Set
                Me.temp_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wdir_r() As Boolean
            Get
                Return Me.wdir_rField
            End Get
            Set
                Me.wdir_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wspd_r() As Boolean
            Get
                Return Me.wspd_rField
            End Get
            Set
                Me.wspd_rField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wwa() As Boolean
            Get
                Return Me.wwaField
            End Get
            Set
                Me.wwaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tstmprb() As Boolean
            Get
                Return Me.tstmprbField
            End Get
            Set
                Me.tstmprbField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property tstmcat() As Boolean
            Get
                Return Me.tstmcatField
            End Get
            Set
                Me.tstmcatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property wgust() As Boolean
            Get
                Return Me.wgustField
            End Get
            Set
                Me.wgustField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property iceaccum() As Boolean
            Get
                Return Me.iceaccumField
            End Get
            Set
                Me.iceaccumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property maxrh() As Boolean
            Get
                Return Me.maxrhField
            End Get
            Set
                Me.maxrhField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property minrh() As Boolean
            Get
                Return Me.minrhField
            End Get
            Set
                Me.minrhField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum formatType
        
        '''<remarks/>
        <System.Xml.Serialization.SoapEnumAttribute("24 hourly")>  _
        Item24hourly
        
        '''<remarks/>
        <System.Xml.Serialization.SoapEnumAttribute("12 hourly")>  _
        Item12hourly
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum featureTypeType
        
        '''<remarks/>
        Forecast_Gml2Point
        
        '''<remarks/>
        Forecast_Gml2AllWx
        
        '''<remarks/>
        Forecast_GmlsfPoint
        
        '''<remarks/>
        Forecast_GmlObs
        
        '''<remarks/>
        NdfdMultiPointCoverage
        
        '''<remarks/>
        Ndfd_KmlPoint
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum compTypeType
        
        '''<remarks/>
        IsEqual
        
        '''<remarks/>
        Between
        
        '''<remarks/>
        GreaterThan
        
        '''<remarks/>
        GreaterThanEqualTo
        
        '''<remarks/>
        LessThan
        
        '''<remarks/>
        LessThanEqualTo
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="https://graphical.weather.gov/xml/DWMLgen/schema/DWML.xsd")>  _
    Public Enum sectorType
        
        '''<remarks/>
        conus
        
        '''<remarks/>
        nhemi
        
        '''<remarks/>
        alaska
        
        '''<remarks/>
        guam
        
        '''<remarks/>
        hawaii
        
        '''<remarks/>
        puertori
        
        '''<remarks/>
        npacocn
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub NDFDgenCompletedEventHandler(ByVal sender As Object, ByVal e As NDFDgenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NDFDgenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub NDFDgenByDayCompletedEventHandler(ByVal sender As Object, ByVal e As NDFDgenByDayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NDFDgenByDayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub NDFDgenLatLonListCompletedEventHandler(ByVal sender As Object, ByVal e As NDFDgenLatLonListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NDFDgenLatLonListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub NDFDgenByDayLatLonListCompletedEventHandler(ByVal sender As Object, ByVal e As NDFDgenByDayLatLonListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NDFDgenByDayLatLonListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GmlLatLonListCompletedEventHandler(ByVal sender As Object, ByVal e As GmlLatLonListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GmlLatLonListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GmlTimeSeriesCompletedEventHandler(ByVal sender As Object, ByVal e As GmlTimeSeriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GmlTimeSeriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub LatLonListSubgridCompletedEventHandler(ByVal sender As Object, ByVal e As LatLonListSubgridCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LatLonListSubgridCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub LatLonListLineCompletedEventHandler(ByVal sender As Object, ByVal e As LatLonListLineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LatLonListLineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub LatLonListZipCodeCompletedEventHandler(ByVal sender As Object, ByVal e As LatLonListZipCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LatLonListZipCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub LatLonListSquareCompletedEventHandler(ByVal sender As Object, ByVal e As LatLonListSquareCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LatLonListSquareCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub CornerPointsCompletedEventHandler(ByVal sender As Object, ByVal e As CornerPointsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CornerPointsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub LatLonListCityNamesCompletedEventHandler(ByVal sender As Object, ByVal e As LatLonListCityNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LatLonListCityNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
